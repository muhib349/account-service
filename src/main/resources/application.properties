spring.datasource.url=jdbc:mysql://localhost:3306/accounts-db
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update

server.port=8080

spring.application.name=accounts
spring.profiles.active=dev
spring.config.import=optional:configserver:http://localhost:8071/

management.endpoints.web.exposure.include=*
management.info.env.enabled=true

eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=http://localhost:8070/eureka/

# Actuator endpoints for Circuit Breaker
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always

# Circuit Breaker configuration
resilience4j.circuitbreaker.instances.accounts.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.accounts.failureRateThreshold=50
resilience4j.circuitbreaker.instances.accounts.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.accounts.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.accounts.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.accounts.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.accounts.slidingWindowSize=10
resilience4j.circuitbreaker.instances.accounts.slidingWindowType=COUNT_BASED

management.endpoint.shutdown.enabled=true

management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans


# kafka configuration

spring.kafka.bootstrap-servers=localhost:9093
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.topic.name=save-account-topic

spring.kafka.consumer.group-id=myGroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*